name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  publish_modules:
    name: Publish Modules
    needs: create_release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [8, 11]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        id: setup_jdk
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build Maven
        id: build_maven
        run: ./mvnw package bundle-support:deploy
      - name: Package Modules
        id: package_modules
        run: zip --junk-paths modules.zip bundles/deploy/* bundles/osgi/modules/*
      - name: Upload Modules
        id: upload_modules
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: modules.zip
          asset_name: ${{ github.event.repository.name }}-modules-jdk${{ matrix.java  }}.zip
          asset_content_type: application/zip
      - name: Rollback Release
        if: failure() && needs.create_release.outputs.id != ''
        uses: author/action-rollback@stable
        with:
          id: ${{ needs.create_release.id }}
          tag: ${{ github.ref }}
 
  publish_bundles:
     name: Publish Bundles
     needs: create_release
     runs-on: ubuntu-latest
     strategy:
       matrix:
         java: [8, 11]
         target_env: ["local", "dev", "uat", "prod"]
     steps:
       - uses: actions/checkout@v2
       - name: Set up JDK
         id: setup_jdk
         uses: actions/setup-java@v1
         with:
           java-version: ${{ matrix.java }}
       - name: Cache Maven packages
         uses: actions/cache@v2
         with:
           path: ~/.m2
           key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
           restore-keys: ${{ runner.os }}-m2
       - name: Dist Bundle
         id: dist_bundle
         run: ./mvnw bundle-support:dist -Dliferay.workspace.environment=${{ matrix.target_env  }}
       - name: Upload Bundles
         id: upload_bundles
         uses: actions/upload-release-asset@v1
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
           upload_url: ${{ needs.create_release.outputs.upload_url }}
           asset_path: ./target/${{ github.event.repository.name }}.tar.gz
           asset_name: ${{ github.event.repository.name }}-${{ matrix.target_env  }}-jdk${{ matrix.java  }}.tar.gz
           asset_content_type: application/zip
       - name: Rollback Release
         if: failure() && needs.create_release.outputs.id != ''
         uses: author/action-rollback@stable
         with:
           id: ${{ needs.create_release.id }}
           tag: ${{ github.ref }}
